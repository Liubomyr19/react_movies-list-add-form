{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","_ref$label","label","_ref$required","required","_ref$onChange","onChange","_useState","useState","random","Math","toString","slice","concat","id","_slicedToArray","_useState3","_useState4","touched","setTouched","hasError","htmlFor","classNames","type","placeholder","event","onBlur","NewMovie","onAdd","_useState2","count","setCount","newMovie","setNewMovie","handleChange","e","_e$target","target","prevMovie","_objectSpread","_defineProperty","canAdd","onSubmit","preventDefault","disabled","App","moviesFromServer","setMovies","current","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b25299d0.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { ChangeEvent, useState } from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  name: string;\n  value: string;\n  label?: string;\n  required?: boolean;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => {},\n}) => {\n  const [id] = useState(() => {\n    const random = Math.random().toString().slice(2);\n\n    return `${name}-${random}`;\n  });\n\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', { 'is-danger': hasError })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={(event: ChangeEvent<HTMLInputElement>) => onChange(event)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n      {hasError && <p className=\"help is-danger\">{`${label} is required`}</p>}\n    </div>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [newMovie, setNewMovie] = useState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n\n    setNewMovie((prevMovie) => ({ ...prevMovie, [name]: value }));\n  };\n\n  const canAdd = !!newMovie.title\n    && !!newMovie.imgUrl\n    && !!newMovie.imdbUrl\n    && !!newMovie.imdbId;\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (canAdd) {\n      setCount(count + 1);\n\n      onAdd(newMovie);\n\n      setNewMovie({\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      });\n    }\n  };\n\n  return (\n    <form className=\"NewMovie\" key={count} onSubmit={handleSubmit}>\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={newMovie.title}\n        onChange={handleChange}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={newMovie.description}\n        onChange={handleChange}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={newMovie.imgUrl}\n        onChange={handleChange}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={newMovie.imdbUrl}\n        onChange={handleChange}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={newMovie.imdbId}\n        onChange={handleChange}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={!canAdd}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (movie: Movie) => {\n    setMovies(current => [...current, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}