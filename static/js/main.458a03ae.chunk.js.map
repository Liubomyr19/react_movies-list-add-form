{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","_ref$label","label","_ref$placeholder","placeholder","concat","_ref$required","required","_ref$onChange","onChange","_useState","useState","Math","random","toFixed","slice","id","_slicedToArray","_useState3","_useState4","touched","setTouched","hasError","trim","htmlFor","type","classNames","onBlur","NewMovie","onAdd","_useState2","count","setCount","newMovie","setNewMovie","handleChange","e","_e$target","target","prevMovie","_objectSpread","_defineProperty","handleButtonDisabling","isButtonDisabled","v","onClick","event","preventDefault","prev","disabled","App","moviesFromServer","setMovies","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.458a03ae.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && (!value.trim());\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          name={name}\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n          onBlur={() => setTouched(!touched)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (newValue: Movie) => void,\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n\n  const [newMovie, setNewMovie] = useState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n\n    setNewMovie((prevMovie) => ({ ...prevMovie, [name]: value }));\n  };\n\n  const handleButtonDisabling = () => {\n    const disabled = !newMovie.title.trim()\n      || !newMovie.imgUrl.trim()\n      || !newMovie.imdbUrl.trim()\n      || !newMovie.imdbId.trim();\n\n    return disabled;\n  };\n\n  const isButtonDisabled = handleButtonDisabling();\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (\n      !newMovie.title.trim()\n      || !newMovie.imgUrl.trim()\n      || !newMovie.imdbUrl.trim()\n      || !newMovie.imdbId.trim()\n    ) {\n      return;\n    }\n\n    setCount(count + 1);\n    onAdd(newMovie);\n    setNewMovie((prev) => ({\n      ...prev,\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    }));\n  };\n\n  return (\n    <form className=\"NewMovie\" key={count}>\n      <h2 className=\"title\">Add a movie</h2>\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={newMovie.title}\n        onChange={(v) => {\n          handleChange(v);\n          handleButtonDisabling();\n        }}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={newMovie.description}\n        onChange={handleChange}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={newMovie.imgUrl}\n        onChange={(v) => {\n          handleChange(v);\n          handleButtonDisabling();\n        }}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={newMovie.imdbUrl}\n        onChange={(v) => {\n          handleChange(v);\n          handleButtonDisabling();\n        }}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={newMovie.imdbId}\n        onChange={(v) => {\n          handleChange(v);\n          handleButtonDisabling();\n        }}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            onClick={handleSubmit}\n            disabled={isButtonDisabled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie\n          onAdd={(movie) => setMovies([...movies, movie])}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}